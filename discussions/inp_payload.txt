# Example POST request for /audio endpoint

import requests

url = "http://51.159.148.245:8000/audio"
payload = {
    "messages": [
        {
            "role": "system",
            "content": [
                {"type": "text", "text": "System instructions here"}
            ]
        },
        {
            "role": "user",
            "content": [
                {"type": "text", "text": "Your prompt text here"},
                {
                    "type": "voice",
                    "voice": {
                        "name": "alloy",  # or "ballad", "verse", etc.
                        "data": "<base64_audio_string>",
                        "format": "wav"
                    }
                },
                {
                    "type": "clone_audio_transcript",
                    "audio_text": "Transcription or description of the reference audio"
                },
                {
                    "type": "speech_audio",
                    "audio": {"data": "<base64_audio_string>", "format": "wav"}
                }
            ]
        }
    ]
}

response = requests.post(url, json=payload)

if response.headers.get("Content-Type") == "audio/wav":
    with open("output.wav", "wb") as f:
        f.write(response.content)
    print("Audio saved as output.wav")
else:
    print(response.json())




# Example GET request for /audio endpoint

url = "http://51.159.148.245:8000/audio"
params = {
    "text": "Your prompt text here",
    "system": "System instructions here",
    "voice": "alloy"  # or "ballad", "verse", etc.
}

response = requests.get(url, params=params)

if response.headers.get("Content-Type") == "audio/wav":
    with open("output.wav", "wb") as f:
        f.write(response.content)
    print("Audio saved as output.wav")
else:
    print(response.json())

TTS --> TEXT TO SPEECH (audio modality output)
STS --> SPEECH TO SPEECH (audio modality output)
STT --> SPEECH TO TEXT (text modality output)
TTT --> TEXT TO TEXT (text modality output)


