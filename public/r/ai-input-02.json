{
  "name": "ai-input-02",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { Globe, Paperclip, Send } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\nimport { useAutoResizeTextarea } from \"@/hooks/use-auto-resizer-textarea\";\nimport { AIInputSecondProps } from \"./types/types\";\n\n\nexport const AIInputSecond: React.FC<AIInputSecondProps> = ({\n  placeholder = \"Search the web...\",\n  minHeight = 52,\n  maxHeight = 200,\n  theme = \"dark\",\n  showSearchToggle = true,\n  showFileUpload = true,\n  onSubmit,\n  sendButtonIcon,\n  searchButtonIcon,\n}) => {\n  const [value, setValue] = useState<string>(\"\");\n  const [file, setFile] = useState<File | null>(null);\n  const [showSearch, setShowSearch] = useState<boolean>(true);\n\n  const { textareaRef, adjustHeight } = useAutoResizeTextarea({ minHeight, maxHeight });\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) setFile(e.target.files[0]);\n  };\n\n  const handleSubmit = () => {\n    if (!value.trim() && !file) return;\n    if (onSubmit) onSubmit(value, file || undefined);\n    setValue(\"\");\n    setFile(null);\n    adjustHeight(true);\n  };\n\n  return (\n    <div className=\"w-full py-4\">\n      <div className=\"relative max-w-xl w-full mx-auto\">\n        <div className=\"relative flex flex-col\">\n          <div className=\"overflow-y-auto max-h-[200px]\">\n            <Textarea\n              id=\"ai-input-02\"\n              value={value}\n              placeholder={placeholder}\n              className=\"w-full rounded-xl rounded-b-none px-4 py-3 bg-black/5 dark:bg-white/5 border-none dark:text-white placeholder:text-black/70 dark:placeholder:text-white/70 resize-none focus-visible:ring-0 leading-[1.2]\"\n              ref={textareaRef}\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\" && !e.shiftKey) {\n                  e.preventDefault();\n                  handleSubmit();\n                }\n              }}\n              onChange={(e) => {\n                setValue(e.target.value);\n                adjustHeight();\n              }}\n            />\n          </div>\n\n          <div className=\"h-12 bg-black/5 dark:bg-white/5 rounded-b-xl\">\n            <div className=\"absolute left-3 bottom-3 flex items-center gap-2\">\n              {showFileUpload && (\n                <label className=\"cursor-pointer rounded-lg p-2 bg-black/5 dark:bg-white/5\">\n                  <input type=\"file\" className=\"hidden\" onChange={handleFileChange} />\n                  <Paperclip className=\"w-4 h-4 text-black/40 dark:text-white/40 hover:text-black dark:hover:text-white transition-colors\" />\n                </label>\n              )}\n\n              {showSearchToggle && (\n                <button\n                  type=\"button\"\n                  onClick={() => setShowSearch(!showSearch)}\n                  className={cn(\n                    \"rounded-full transition-all flex items-center gap-2 px-1.5 py-1 border h-8 cursor-pointer\",\n                    showSearch\n                      ? \"bg-sky-500/15 border-sky-400 text-sky-500\"\n                      : \"bg-black/5 dark:bg-white/5 border-transparent text-black/40 dark:text-white/40 hover:text-black dark:hover:text-white \"\n                  )}\n                >\n                  <div className=\"w-4 h-4 flex items-center justify-center shrink-0\">\n                    <motion.div\n                      animate={{\n                        rotate: showSearch ? 180 : 0,\n                        scale: showSearch ? 1.1 : 1,\n                      }}\n                      whileHover={{\n                        rotate: showSearch ? 180 : 15,\n                        scale: 1.1,\n                        transition: { type: \"spring\", stiffness: 300, damping: 10 },\n                      }}\n                      transition={{ type: \"spring\", stiffness: 260, damping: 25 }}\n                    >\n                      {searchButtonIcon || <Globe className={cn(\"w-4 h-4\", showSearch ? \"text-sky-500\" : \"text-inherit\")} />}\n                    </motion.div>\n                  </div>\n\n                  <AnimatePresence>\n                    {showSearch && (\n                      <motion.span\n                        initial={{ width: 0, opacity: 0 }}\n                        animate={{ width: \"auto\", opacity: 1 }}\n                        exit={{ width: 0, opacity: 0 }}\n                        transition={{ duration: 0.2 }}\n                        className=\"text-sm overflow-hidden whitespace-nowrap text-sky-500 shrink-0\"\n                      >\n                        Search\n                      </motion.span>\n                    )}\n                  </AnimatePresence>\n                </button>\n              )}\n            </div>\n\n            <div className=\"absolute right-3 bottom-3\">\n              <button\n                type=\"button\"\n                onClick={handleSubmit}\n                className={cn(\n                  \"rounded-lg p-2 transition-colors\",\n                  value || file\n                    ? \"bg-sky-500/15 text-sky-500\"\n                    : \"bg-black/5 dark:bg-white/5 text-black/40 dark:text-white/40 hover:text-black dark:hover:text-white cursor-pointer\"\n                )}\n              >\n                {sendButtonIcon || <Send className=\"w-4 h-4\" />}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n",
      "path": "src/components/FingUIComponents/ai-input/ai-input-02.tsx",
      "target": "/components/FingUIComponents/ai-input-02.tsx"
    },
    {
      "type": "registry:hook",
      "content": "\nimport { useEffect, useRef, useCallback } from \"react\";\n\ninterface UseAutoResizeTextareaProps {\n    minHeight: number;\n    maxHeight?: number;\n}\n\nexport function useAutoResizeTextarea({\n    minHeight,\n    maxHeight,\n}: UseAutoResizeTextareaProps) {\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n    const adjustHeight = useCallback(\n        (reset?: boolean) => {\n            const textarea = textareaRef.current;\n            if (!textarea) return;\n\n            if (reset) {\n                textarea.style.height = `${minHeight}px`;\n                return;\n            }\n\n            // Temporarily shrink to get the right scrollHeight\n            textarea.style.height = `${minHeight}px`;\n\n            // Calculate new height\n            const newHeight = Math.max(\n                minHeight,\n                Math.min(\n                    textarea.scrollHeight,\n                    maxHeight ?? Number.POSITIVE_INFINITY\n                )\n            );\n\n            textarea.style.height = `${newHeight}px`;\n        },\n        [minHeight, maxHeight]\n    );\n\n    useEffect(() => {\n        // Set initial height\n        const textarea = textareaRef.current;\n        if (textarea) {\n            textarea.style.height = `${minHeight}px`;\n        }\n    }, [minHeight]);\n\n    // Adjust height on window resize\n    useEffect(() => {\n        const handleResize = () => adjustHeight();\n        window.addEventListener(\"resize\", handleResize);\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, [adjustHeight]);\n\n    return { textareaRef, adjustHeight };\n}",
      "path": "src/hooks/use-auto-resizer-textarea.ts",
      "target": "/components/FingUIComponents/use-auto-resizer-textarea.ts"
    }
  ]
}