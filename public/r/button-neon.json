{
  "name": "button-neon",
  "type": "registry:component",
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\"\n\nimport type React from \"react\"\nimport { useRef, useEffect } from \"react\"\nimport { motion } from \"framer-motion\"\nimport { gsap } from \"gsap\"\nimport { Button } from \"@/components/ui/button\"\nimport { cn } from \"@/lib/utils\"\nimport { NeonBorderButtonProps } from \"./types/types\"\n\n\n\nexport const ButtonNeon = ({\n  children,\n  className,\n  onClick,\n  glowColor = \"#ffffff\", // default white glow\n  glowIntensity = 20,\n  duration = 1.5,\n  repeat = -1,\n  yoyo = true,\n  type = \"button\",\n  disabled = false,\n}: NeonBorderButtonProps) => {\n  const borderRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const border = borderRef.current\n    if (!border) return\n\n    gsap.to(border, {\n      boxShadow: `0 0 ${glowIntensity}px ${glowColor}, 0 0 ${glowIntensity * 2}px ${glowColor}, 0 0 ${glowIntensity * 3}px ${glowColor}`,\n      duration,\n      repeat,\n      yoyo,\n      ease: \"power2.inOut\",\n    })\n  }, [glowColor, glowIntensity, duration, repeat, yoyo])\n\n  return (\n    <div className=\"relative inline-block\">\n      <div\n        ref={borderRef}\n        className=\"absolute inset-0 rounded-lg border-2\"\n        style={{\n          borderColor: glowColor,\n          boxShadow: `0 0 ${glowIntensity / 2}px ${glowColor}`,\n        }}\n      />\n      <motion.div whileHover={{ scale: 1.02 }} whileTap={{ scale: 0.98 }}>\n        <Button\n          type={type}\n          disabled={disabled}\n          onClick={onClick}\n          className={cn(\n            \"relative bg-black hover:bg-gray-900 text-white font-mono px-8 py-3 rounded-lg border-0\",\n            className,\n          )}\n        >\n          {children}\n        </Button>\n      </motion.div>\n    </div>\n  )\n}\n",
      "path": "src/components/FingUIComponents/buttons/button-neon.tsx",
      "target": "/components/FingUIComponents/button-neon.tsx"
    }
  ]
}