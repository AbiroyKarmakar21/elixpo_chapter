{
  "name": "button-morph",
  "type": "registry:component",
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { motion } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { ButtonMorphProps } from \"./types/types\";\n\nexport const ButtonMorph: React.FC<ButtonMorphProps> = ({\n  children,\n  initialRadius = \"0.5rem\",\n  morphedRadius = \"9999px\",\n  initialWidth = \"10rem\",\n  morphedWidth = \"6rem\",\n  duration = 0.6,\n  ease = \"easeInOut\",\n  startMorphed = false,\n  className,\n  onClick,\n  type = \"button\",\n  disabled,\n  ...props\n}) => {\n  const [morphed, setMorphed] = useState(startMorphed);\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    setMorphed((prev) => !prev);\n    if (onClick) onClick(e);\n  };\n\n  return (\n    <motion.div\n      className=\"inline-flex\"\n      animate={{\n        borderRadius: morphed ? morphedRadius : initialRadius,\n        width: morphed ? morphedWidth : initialWidth,\n      }}\n      transition={{ duration, ease }}\n    >\n      <Button\n        type={type}\n        disabled={disabled}\n        onClick={handleClick}\n        className={`w-full font-mono font-medium  ${className ?? \"\"}`}\n        {...props}\n      > \n        {children || \"Spank Me\"}\n      </Button>\n    </motion.div>\n  );\n};\n",
      "path": "src/components/FingUIComponents/buttons/button-morph.tsx",
      "target": "src/components/FingUIComponents/button-morph.tsx"
    }
  ]
}