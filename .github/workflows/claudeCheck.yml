name: Claude Code with Router

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  issues:
    types: [opened, edited, labeled]
  workflow_dispatch:
    inputs:
      prompt:
        description: "You are a code reviewer. Provide specific instructions for code analysis, quality checks, security review, performance optimization suggestions, and best practices recommendations."
        default: "Please review this code as an experienced code reviewer. Focus on: 1) Code quality and maintainability 2) Security vulnerabilities 3) Performance issues 4) Best practices adherence 5) Documentation completeness 6) Test coverage suggestions. Provide constructive feedback with specific examples and recommendations for improvement."
        required: false
        type: string

jobs:
  claude:
    if: |
      github.repository_owner == 'Circuit-Overtime' &&
      (
        (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
        (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
        github.event_name == 'workflow_dispatch' ||
        (github.event_name == 'issues' && (github.event.action == 'opened' || github.event.action == 'labeled')) ||
        (github.event_name == 'pull_request' && github.event.pull_request.draft == false)
      )

    runs-on: ubuntu-latest
    timeout-minutes: 60

    permissions:
      contents: write
      pull-requests: write
      issues: write
      statuses: write
      checks: write
      discussions: write
      id-token: write
      actions: read
      packages: write
      deployments: write
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH
        shell: bash

      - name: Verify Bun Installation
        run: ~/.bun/bin/bun --version
        shell: bash

      - name: Configure Claude Code Router
        run: |
          mkdir -p $HOME/.claude-code-router
          cat > $HOME/.claude-code-router/config.json << 'EOF'
          {
            "LOG": true,
            "NON_INTERACTIVE_MODE": true,
            "API_TIMEOUT_MS": 600000,
            "Providers": [
              {
                "name": "pollinations",
                "api_base_url": "https://text.pollinations.ai/openai",
                "api_key": "${{ secrets.POLLI_PAT }}",
                "models": ["gemini"],
                "transformer": { "use": ["tooluse"] }
              }
            ],
            "Router": {
              "default": "pollinations,gemini",
              "background": "pollinations,mistral",
              "think": "pollinations,gemini",
              "longContext": "pollinations,gemini",
              "longContextThreshold": 60000,
              "webSearch": "pollinations,gemini-search"
            }
          }
          EOF
          echo "✅ Claude router configuration created."
        shell: bash

      - name: Start Claude Code Router
        run: |
          echo "🚀 Starting Claude Code Router..."
          ~/.bun/bin/bunx @musistudio/claude-code-router@latest start > router.log 2>&1 &
          echo "ROUTER_PID=$!" >> $GITHUB_ENV

          echo "⏳ Waiting for router to start..."
          for i in {1..30}; do
            if curl -s -f http://localhost:3456/ >/dev/null 2>&1; then
              echo "✅ Router is ready!"
              break
            fi
            echo "Attempt $i/30..."
            sleep 2
          done
        shell: bash

      - name: Verify Router Health
        run: |
          echo "🌐 Testing router endpoint..."
          curl -v http://localhost:3456/ || true
          echo ""
          echo "Router logs (tail):"
          tail -n 20 router.log || true
        shell: bash

      - name: Configure Git Identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
        shell: bash

      - name: Run Claude Code
        id: claude
        continue-on-error: true
        uses: anthropics/claude-code-action@beta
        env:
          ANTHROPIC_BASE_URL: http://localhost:3456
          ANTHROPIC_API_KEY: "router-bypass"
        with:
          anthropic_api_key: "router-bypass"

      - name: Check Claude Code Result
        if: always()
        run: |
          echo "Claude Code exit status: ${{ steps.claude.outcome }}"
          if [ "${{ steps.claude.outcome }}" != "success" ]; then
            echo "❌ Claude Code failed."
            echo "Router logs:"
            cat router.log || true
          else
            echo "✅ Claude Code executed successfully!"
          fi
        shell: bash

      - name: Upload Router Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: router-logs
          path: router.log
          retention-days: 7

      - name: Cleanup
        if: always()
        run: |
          echo "🧹 Cleaning up router process..."
          if [ -n "$ROUTER_PID" ]; then
            kill $ROUTER_PID 2>/dev/null || true
          fi
          pkill -f "claude-code-router" || true
          echo "✅ Cleanup complete."
        shell: bash
