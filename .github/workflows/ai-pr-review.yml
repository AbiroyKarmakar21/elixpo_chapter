name: AI PR Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  ai-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get PR diff
        id: diff
        run: |
          git fetch origin ${{ github.base_ref }}
          DIFF=$(git diff origin/${{ github.base_ref }}...HEAD)
          echo "diff<<EOF" >> $GITHUB_OUTPUT
          echo "$DIFF" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Get changed files
        id: files
        run: |
          FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | head -20)
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: AI Code Review
        id: review
        run: |
          PROJECT_CONTEXT=$(cat .github/PROJECT_CONTEXT.md)
          
          PROMPT="You are an expert code reviewer for Memory-Arc, a Python memory management system for AI applications.

          PROJECT CONTEXT:
          $PROJECT_CONTEXT

          Review this pull request and provide:
          1. **Summary**: Brief overview of changes
          2. **Code Quality**: Rate 1-10 and explain
          3. **Potential Issues**: Security, bugs, performance concerns
          4. **Suggestions**: Improvements and best practices
          5. **Testing**: What tests should be added/updated

          Changed files:
          ${{ steps.files.outputs.files }}

          Diff (first 3000 chars):
          $(echo '${{ steps.diff.outputs.diff }}' | head -c 3000)

          Provide a concise, actionable review in markdown format."

          REVIEW=$(curl -s -X POST "https://text.pollinations.ai/openai" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.POLLI_TOKEN }}" \
            -d "{
              \"model\": \"gemini\",
              \"messages\": [{\"role\": \"user\", \"content\": $(echo "$PROMPT" | jq -Rs .)}],
              \"temperature\": 0.3,
              \"max_tokens\": 1500
            }" | jq -r '.choices[0].message.content')

          echo "review<<EOF" >> $GITHUB_OUTPUT
          echo "$REVIEW" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post AI Review
        uses: actions/github-script@v6
        with:
          script: |
            const review = `## ðŸ¤– AI Code Review

            ${{ steps.review.outputs.review }}

            ---
            *This review was generated by AI. Please use human judgment for final decisions.*
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: review
            });
