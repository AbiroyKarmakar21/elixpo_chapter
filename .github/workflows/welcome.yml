name: Welcome New Contributors

on:
  issues:
    types: [opened]
  pull_request_target:
    types: [opened]

permissions:
  issues: write
  pull-requests: write

jobs:
  welcome:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install jq
        run: |
          if ! command -v jq &> /dev/null; then
            sudo apt-get update && sudo apt-get install -y jq
          fi

      - name: Check if first time contributor
        id: check
        uses: actions/github-script@v6
        with:
          script: |
            const creator = context.payload.sender.login;
            
            // Check if this is their first contribution
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              creator: creator,
              state: 'all'
            });
            
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all'
            });
            
            const userPRs = prs.filter(pr => pr.user.login === creator);
            
            const isFirstTime = (issues.length + userPRs.length) <= 1;
            core.setOutput('is_first_time', isFirstTime);
            return isFirstTime;

      - name: Generate Personalized Welcome
        if: steps.check.outputs.is_first_time == 'true'
        id: welcome
        run: |
          TYPE="${{ github.event_name }}"
          TITLE="${{ github.event.issue.title || github.event.pull_request.title }}"
          USER="${{ github.event.sender.login }}"
          PROJECT_CONTEXT=$(cat .github/PROJECT_CONTEXT.md)
          
          PROMPT="Generate a warm, personalized welcome message for @$USER who just opened their first $TYPE in Memory-Arc repository.

          PROJECT CONTEXT:
          $PROJECT_CONTEXT

          $TYPE title: $TITLE

          The message should:
          1. Welcome them warmly with emoji
          2. Thank them for their contribution
          3. Briefly mention what Memory-Arc does
          4. Provide 2-3 helpful next steps
          5. Encourage them to ask questions

          Keep it friendly, concise, and encouraging. Use markdown and emojis!"

          MESSAGE=$(curl -s -X POST "https://text.pollinations.ai/openai" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.POLLI_TOKEN }}" \
            -d "{
              \"model\": \"gemini\",
              \"messages\": [{\"role\": \"user\", \"content\": $(echo "$PROMPT" | jq -Rs .)}],
              \"temperature\": 0.7,
              \"max_tokens\": 500
            }" | jq -r '.choices[0].message.content')

          echo "message<<EOF" >> $GITHUB_OUTPUT
          echo "$MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post Welcome Message
        if: steps.check.outputs.is_first_time == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            const message = `${{ steps.welcome.outputs.message }}

            ---

            ### ðŸ“š Helpful Resources

            - [Quick Start Guide](https://github.com/Itachi-1824/Memory-Arc/blob/main/QUICKSTART.md)
            - [Contributing Guidelines](https://github.com/Itachi-1824/Memory-Arc/blob/main/CONTRIBUTING.md)
            - [Examples](https://github.com/Itachi-1824/Memory-Arc/tree/main/examples)

            Feel free to ask questions - we're here to help! ðŸš€
            `;

            const issueNumber = context.issue.number || context.payload.pull_request.number;
            
            await github.rest.issues.createComment({
              issue_number: issueNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
