name: Process Project Submission

on:
  issues:
    types: [closed]

jobs:
  extract-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract Issue Data
        id: extract_data
        run: |
          ISSUE_BODY=$(jq -Rs '.' <<<"${{ github.event.issue.body }}")
          JSON=$(echo "$ISSUE_BODY" | jq -r '
            capture("### Project Name\\n(.+)\\n### Project Description\\n(.+)\\n### Project URL\\n(.+)\\n### Discord Username or Social Profile Link\\n(.+)\\n### GitHub Repository URL\\n(.+)\\n### Additional Information\\n(.+)\\n### Contact Information\\n(.+)")
          ')
          PROJECT_NAME=$(echo "$JSON" | jq -r '.["1"] // "null"')
          PROJECT_DESCRIPTION=$(echo "$JSON" | jq -r '.["2"] // "null"')
          PROJECT_URL=$(echo "$JSON" | jq -r '.["3"] // "null"')
          DISCORD_USERNAME=$(echo "$JSON" | jq -r '.["4"] // "null"')
          GITHUB_REPO=$(echo "$JSON" | jq -r '.["5"] // "null"')
          ADDITIONAL_INFO=$(echo "$JSON" | jq -r '.["6"] // "null"')
          CONTACT_INFO=$(echo "$JSON" | jq -r '.["7"] // "null"')

          echo "Extracted values:"
          echo "Project Name: $PROJECT_NAME"
          echo "Project Description: $PROJECT_DESCRIPTION"
          echo "Project URL: $PROJECT_URL"
          echo "Discord Username: $DISCORD_USERNAME"
          echo "GitHub Repo: $GITHUB_REPO"
          echo "Additional Info: $ADDITIONAL_INFO"
          echo "Contact Info: $CONTACT_INFO"

          NEW_ENTRY=$(jq -n \
            --arg name "$PROJECT_NAME" \
            --arg desc "$PROJECT_DESCRIPTION" \
            --arg url "$PROJECT_URL" \
            --arg discord "$DISCORD_USERNAME" \
            --arg repo "$GITHUB_REPO" \
            --arg info "$ADDITIONAL_INFO" \
            --arg contact "$CONTACT_INFO" \
            '{project_name: $name, project_description: $desc, project_url: $url, discord_username: $discord, github_repo: $repo, additional_info: $info, contact: $contact}')
          
          echo "NEW_ENTRY=$NEW_ENTRY" >> $GITHUB_ENV

      - name: Update projects.json
        run: |
          if [ ! -f projects.json ]; then
            echo "[]" > projects.json
          fi
          
          jq '. += [$NEW_ENTRY]' projects.json > tmp.json && mv tmp.json projects.json

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add projects.json
          git commit -m "Add new project entry from issue #${{ github.event.issue.number }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
